version: "3.8"

services:
#================================
#      POSTGRES
#================================
  db:
    image: postgres:14-alpine
    container_name: movies_db
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - movies_db:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=123qwe
      - POSTGRES_DB=movies_database

#================================
#       ELK
#================================
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: movies_elk
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    depends_on:
      - db
    volumes:
      - data_elk:/usr/share/elasticsearch/data

#================================
#       WEB APPLICATION
#================================
  web:
    build:
      context: ./app
    image: movies_web
    container_name: movies_web
    restart: on-failure
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - ./app:/app
      - media:/app/media
      - static:/app/static

#================================
#       NGINX
#================================
  nginx:
    image: nginx:1.21.6
    container_name: movies_nginx
    restart: always
    volumes:
      - static:/app/static
      - media:/app/media
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs/:/etc/nginx/conf.d:ro
    depends_on:
      - web
    ports:
      - "80:80"

#================================
#       SWAGGER
#================================
  swagger:
    image: swaggerapi/swagger-ui
    container_name: movies_swagger
    ports:
      - "8080:8080"
    volumes:
      - ./app/swagger/openapi.yaml:/swagger.yaml
    environment:
      - SWAGGER_JSON=/swagger.yaml
    depends_on:
      - web

  #================================
  #       ETL
  #================================
  etl_service:
    build:
      context: ./etl
    image: etl_service
    container_name: movies_etl
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - elastic
    command: python3 ./main.py

#================================
#       Redis
#================================
  redis:
    image: redis:7.0
    container_name: movies_redis
    restart: always
    ports:
      - "6379:6379"

#================================
#         NETWORK
#================================
networks:
  movies-network:
    external:
      name: movies-network

#================================
#         NETWORK
#================================
volumes:
  movies_db:
  data_elk:
  media:
  static:
